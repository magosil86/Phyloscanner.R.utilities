phc			<- copy(ph)
tmp		<- subset(df[, list(CLU_N=length(unique(FILE_ID))), by='CLU_ID'], CLU_N==1)#
		df		<- merge(df, tmp, by='CLU_ID')
df
df		<- merge(df, df[, list(BAMCLU= paste( FILE_ID[1],'_clu_',CLU_ID,'_count_',sum(COUNT), sep='' ) ), by='CLU_ID'], by='CLU_ID')
df
?drop.tip
data(bird.families)#
tip <- c(#
"Eopsaltriidae", "Acanthisittidae", "Pittidae", "Eurylaimidae",#
"Philepittidae", "Tyrannidae", "Thamnophilidae", "Furnariidae",#
"Formicariidae", "Conopophagidae", "Rhinocryptidae", "Climacteridae",#
"Menuridae", "Ptilonorhynchidae", "Maluridae", "Meliphagidae",#
"Pardalotidae", "Petroicidae", "Irenidae", "Orthonychidae",#
"Pomatostomidae", "Laniidae", "Vireonidae", "Corvidae",#
"Callaeatidae", "Picathartidae", "Bombycillidae", "Cinclidae",#
"Muscicapidae", "Sturnidae", "Sittidae", "Certhiidae",#
"Paridae", "Aegithalidae", "Hirundinidae", "Regulidae",#
"Pycnonotidae", "Hypocoliidae", "Cisticolidae", "Zosteropidae",#
"Sylviidae", "Alaudidae", "Nectariniidae", "Melanocharitidae",#
"Paramythiidae","Passeridae", "Fringillidae")
plot(drop.tip(bird.orders, 6:23, subtree = TRUE))
data(bird.orders)
plot(drop.tip(bird.orders, 6:23, subtree = TRUE))
plot(bird.orders)
plot(drop.tip(bird.orders, 6:23, subtree = TRUE))
pty.phc<- copy(pty.ph)
length(pty.phc)<- 10
for(i in seq_along(pty.phc))#
	{#
		print(i) #
		ph				<- pty.phc[[i]]		#
		#FILE<- "ptyr1_InWindow_481_to_540_dophy_examl.newick"#
		#ph		<- pty.phc[[FILE]]		#
		ph				<- pty.evaluate.tree.collapse.clusters(ph, thresh.brl=thresh.brl)#
		phb				<- data.table(IDX=seq_along(ph$tip.label), BAM=ph$tip.label, FILE_ID= gsub('_read.*|_clu.*','',ph$tip.label))#
		#	group edges by individual#
		ph				<- pty.evaluate.tree.groupindividuals(ph, phb)#
		#	group edges by FILL#
		tmp				<- as.numeric(gsub('ptyr','',regmatches(names(pty.ph)[i], regexpr('ptyr[0-9]+',names(pty.ph)[i]))))#
		phb				<- merge(phb, subset(pty.runs, PTY_RUN==tmp), by='FILE_ID')#
		ph				<- pty.evaluate.tree.groupcandidates(ph, phb)	#
		pty.phc[[i]]	<- ph		#
	}
tmp				<- ptyfiles[,	{#
								print(FILE)#
								FILE<- "ptyr1_InWindow_481_to_540_dophy_examl.newick"#
								ph		<- pty.phc[[FILE]]#
								tmp		<- node.depth.edgelength(ph)[1:Ntip(ph)]#
								list(BAM=ph$tip.label, HEIGHT=tmp)#
							}, by='FILE']	#
	ptyfiles		<- merge(ptyfiles, tmp[, list(HMX= max(HEIGHT)), by='FILE'], by='FILE')#
	setkey(ptyfiles, PTY_RUN, W_FROM)
tmp			<- subset(ptyfiles, PTY_RUN==ptyr)#
		#	title#
		tmp[, TITLE:=paste('run',PTY_RUN,', window [',W_FROM,',',W_TO,']',sep='')]#
		setkey(tmp, W_FROM)#
		phs			<- lapply(tmp[, FILE], function(x) pty.phc[[x]])#
		names(phs)	<- tmp[, TITLE] #
		#	colours	#
		tmp2		<- unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))#
		col			<- c('black',rainbow_hcl(length(tmp2)-1, start = 270, end = -30, c=100, l=50))#
		names(col)	<- tmp2
i<- 3
max.node.height	<- tmp[i,][, HMX]#
					df				<- data.table(	BAM=phs[[i]]$tip.label, IDX=seq_along(phs[[i]]$tip.label), #
													COUNT= as.numeric(gsub('count_','',regmatches(phs[[i]]$tip.label, regexpr('count_[0-9]+',phs[[i]]$tip.label)))), #
													CLU=grepl('_clu',phs[[i]]$tip.label), #
													FILE_ID= gsub('_read.*|_clu.*','',phs[[i]]$tip.label))#
					p				<- ggtree(phs[[i]], aes(color=INDIVIDUAL, linetype=TYPE)) %<+% df + #
													geom_nodepoint(size=phs[[i]]$node.label/100*3) +#
													geom_tippoint(aes(size=COUNT, shape=CLU)) +#
													geom_tiplab(size=1.2,  hjust=-.1) +							 #
													scale_color_manual(values=col, guide = FALSE) +#
													scale_shape_manual(values=c(20,18), guide=FALSE) +#
													scale_size_area(guide=FALSE) +							#
													scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
													theme_tree2() +#
													theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
													labs(x='subst/site', title=names(phs)[i])
tmp
i
ptyfiles
ptyfiles[, HMX.y:=NULL]
setnames(pty.files, 'HMX.x', 'HMX')
setnames(ptyfiles, 'HMX.x', 'HMX')
tmp			<- subset(ptyfiles, PTY_RUN==ptyr)#
		#	title#
		tmp[, TITLE:=paste('run',PTY_RUN,', window [',W_FROM,',',W_TO,']',sep='')]#
		setkey(tmp, W_FROM)#
		phs			<- lapply(tmp[, FILE], function(x) pty.phc[[x]])#
		names(phs)	<- tmp[, TITLE] #
		#	colours	#
		tmp2		<- unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))#
		col			<- c('black',rainbow_hcl(length(tmp2)-1, start = 270, end = -30, c=100, l=50))#
		names(col)	<- tmp2
i<- 3
tmp
max.node.height	<- tmp[i,][, HMX]#
					df				<- data.table(	BAM=phs[[i]]$tip.label, IDX=seq_along(phs[[i]]$tip.label), #
													COUNT= as.numeric(gsub('count_','',regmatches(phs[[i]]$tip.label, regexpr('count_[0-9]+',phs[[i]]$tip.label)))), #
													CLU=grepl('_clu',phs[[i]]$tip.label), #
													FILE_ID= gsub('_read.*|_clu.*','',phs[[i]]$tip.label))
tmp
max.node.height
df
print(df, n=200)
print(df, n=200)
p				<- ggtree(phs[[i]], aes(color=INDIVIDUAL, linetype=TYPE)) %<+% df + #
													geom_nodepoint(size=phs[[i]]$node.label/100*3) +#
													geom_tippoint(aes(size=COUNT, shape=CLU)) +#
													geom_tiplab(size=1.2,  hjust=-.1) +							 #
													scale_color_manual(values=col, guide = FALSE) +#
													scale_shape_manual(values=c(20,18), guide=FALSE) +#
													scale_size_area(guide=FALSE) +							#
													scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
													theme_tree2() +#
													theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
													labs(x='subst/site', title=names(phs)[i])
p
phs[[i]]
df
col
ggtree(phs[[i]])
ggtree(phs[[i]]) + #
							#%<+% df + #
							#geom_nodepoint(size=phs[[i]]$node.label/100*3) +#
							#geom_tippoint(aes(size=COUNT, shape=CLU)) +#
							#geom_tiplab(size=1.2,  hjust=-.1) +							 #
							#scale_color_manual(values=col, guide = FALSE) +#
							#scale_shape_manual(values=c(20,18), guide=FALSE) +#
							#scale_size_area(guide=FALSE) +							#
							#scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
							theme_tree2() +#
							theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
							labs(x='subst/site', title=names(phs)[i])
tmp
i
tmp				<- ptyfiles[,	{#
								#print(FILE)#
								#FILE<- "ptyr1_InWindow_481_to_540_dophy_examl.newick"#
								ph		<- pty.phc[[FILE]]#
								tmp		<- node.depth.edgelength(ph)[1:Ntip(ph)]#
								list(BAM=ph$tip.label, HEIGHT=tmp)#
							}, by='FILE']
ptyfiles
ptyfiles[, HMX:=NULL]
ptyfiles		<- merge(ptyfiles, tmp[, list(HMX= max(HEIGHT)), by='FILE'], by='FILE')#
	setkey(ptyfiles, PTY_RUN, W_FROM)
tmp			<- subset(ptyfiles, PTY_RUN==ptyr)#
		#	title#
		tmp[, TITLE:=paste('run',PTY_RUN,', window [',W_FROM,',',W_TO,']',sep='')]#
		setkey(tmp, W_FROM)#
		phs			<- lapply(tmp[, FILE], function(x) pty.phc[[x]])#
		names(phs)	<- tmp[, TITLE] #
		#	colours	#
		tmp2		<- unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))#
		col			<- c('black',rainbow_hcl(length(tmp2)-1, start = 270, end = -30, c=100, l=50))#
		names(col)	<- tmp2
max.node.height	<- tmp[i,][, HMX]#
					df				<- data.table(	BAM=phs[[i]]$tip.label, IDX=seq_along(phs[[i]]$tip.label), #
													COUNT= as.numeric(gsub('count_','',regmatches(phs[[i]]$tip.label, regexpr('count_[0-9]+',phs[[i]]$tip.label)))), #
													CLU=grepl('_clu',phs[[i]]$tip.label), #
													FILE_ID= gsub('_read.*|_clu.*','',phs[[i]]$tip.label))#
					p				<- ggtree(phs[[i]], aes(color=INDIVIDUAL, linetype=TYPE)) %<+% df + #
													geom_nodepoint(size=phs[[i]]$node.label/100*3) +#
													geom_tippoint(aes(size=COUNT, shape=CLU)) +#
													geom_tiplab(size=1.2,  hjust=-.1) +							 #
													scale_color_manual(values=col, guide = FALSE) +#
													scale_shape_manual(values=c(20,18), guide=FALSE) +#
													scale_size_area(guide=FALSE) +							#
													scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
													theme_tree2() +#
													theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
													labs(x='subst/site', title=names(phs)[i])#
					p
phps		<- lapply(seq_along(phs), function(i){					#
					max.node.height	<- tmp[i,][, HMX]#
					df				<- data.table(	BAM=phs[[i]]$tip.label, IDX=seq_along(phs[[i]]$tip.label), #
													COUNT= as.numeric(gsub('count_','',regmatches(phs[[i]]$tip.label, regexpr('count_[0-9]+',phs[[i]]$tip.label)))), #
													CLU=grepl('_clu',phs[[i]]$tip.label), #
													FILE_ID= gsub('_read.*|_clu.*','',phs[[i]]$tip.label))#
					p				<- ggtree(phs[[i]], aes(color=INDIVIDUAL, linetype=TYPE)) %<+% df + #
													geom_nodepoint(size=phs[[i]]$node.label/100*3) +#
													geom_tippoint(aes(size=COUNT, shape=CLU)) +#
													geom_tiplab(size=1.2,  hjust=-.1) +							 #
													scale_color_manual(values=col, guide = FALSE) +#
													scale_shape_manual(values=c(20,18), guide=FALSE) +#
													scale_size_area(guide=FALSE) +							#
													scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
													theme_tree2() +#
													theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
													labs(x='subst/site', title=names(phs)[i])#
					p					#
				})	#
		names(phps)	<- names(phs)#
		file	<- file.path( indir, tmp[1,gsub('.newick','collapsed.pdf',gsub('_dophy','',gsub('_InWindow_[0-9]+_to_[0-9]+','',FILE)))] )		#
		if(1)		#for window length 60 (multiple pages)#
		{				#
			tmp			<- seq_len(ceiling(length(phps)/10))#
			pdf(file=file, w=20, h=40)		#for win=60#
			for(i in tmp)#
			{		#
				grid.newpage()#
				pushViewport(viewport(layout=grid.layout(2, 5)))#
				z	<- intersect(seq.int((i-1)*10+1, i*10), seq_len(length(phps)))#
				for(j in z)#
					print(phps[[j]], vp = viewport(layout.pos.row=(ceiling(j/5)-1)%%2+1, layout.pos.col=(j-1)%%5+1))				#
			}#
			dev.off()	#
		}
pty.phc<- copy(pty.ph)
for(i in seq_along(pty.phc))#
	{#
		print(i) #
		ph				<- pty.phc[[i]]		#
		#FILE<- "ptyr1_InWindow_481_to_540_dophy_examl.newick"#
		#ph		<- pty.phc[[FILE]]		#
		ph				<- pty.evaluate.tree.collapse.clusters(ph, thresh.brl=thresh.brl)#
		phb				<- data.table(IDX=seq_along(ph$tip.label), BAM=ph$tip.label, FILE_ID= gsub('_read.*|_clu.*','',ph$tip.label))#
		#	group edges by individual#
		ph				<- pty.evaluate.tree.groupindividuals(ph, phb)#
		#	group edges by FILL#
		tmp				<- as.numeric(gsub('ptyr','',regmatches(names(pty.ph)[i], regexpr('ptyr[0-9]+',names(pty.ph)[i]))))#
		phb				<- merge(phb, subset(pty.runs, PTY_RUN==tmp), by='FILE_ID')#
		ph				<- pty.evaluate.tree.groupcandidates(ph, phb)	#
		pty.phc[[i]]	<- ph		#
	}
roxygen2::roxygenize("/Users/Oliver/git/phyloscan")
roxygen2::roxygenize("/Users/Oliver/git/phyloscan")
library(help='igraph')
?graph.dfs
library(Phyloscanner.R.utilities)#
load( infile )		# loads pty.runs#
#pty.evaluate.tree(indir, pty.runs, outdir=outdir, select=select, outgroup=outgroup)#
tmp		<- data.table(FILE=list.files(outdir, pattern='examl.rda$'))
infile		<- file.path(HOME,"data","PANGEA_HIV_n5003_Imperial_v160110_ZA_examlbs500_coinfrunsinput.rda")
infile
load(infile)
tmp		<- data.table(FILE=list.files(outdir, pattern='examl.rda$'))#
tmp		<- subset(tmp, grepl(select,FILE))#
tmp		<- file.path(outdir, tmp[1,FILE])#
load( tmp )			# loads ptyfiles, pty.ph
select<- 'ptyr12_'
tmp		<- data.table(FILE=list.files(outdir, pattern='examl.rda$'))#
tmp		<- subset(tmp, grepl(select,FILE))#
tmp		<- file.path(outdir, tmp[1,FILE])#
load( tmp )			# loads ptyfiles, pty.ph
tmp
pty.phc<- copy(pty.ph)
for(i in seq_along(pty.phc))#
	{#
		print(i) #
		ph				<- pty.phc[[i]]		#
		#FILE<- "ptyr1_InWindow_481_to_540_dophy_examl.newick"#
		#ph		<- pty.phc[[FILE]]		#
		ph				<- pty.evaluate.tree.collapse.clusters(ph, thresh.brl=thresh.brl)#
		phb				<- data.table(IDX=seq_along(ph$tip.label), BAM=ph$tip.label, FILE_ID= gsub('_read.*|_clu.*','',ph$tip.label))#
		#	group edges by individual#
		ph				<- pty.evaluate.tree.groupindividuals(ph, phb)#
		#	group edges by FILL#
		tmp				<- as.numeric(gsub('ptyr','',regmatches(names(pty.ph)[i], regexpr('ptyr[0-9]+',names(pty.ph)[i]))))#
		phb				<- merge(phb, subset(pty.runs, PTY_RUN==tmp), by='FILE_ID')#
		ph				<- pty.evaluate.tree.groupcandidates(ph, phb)	#
		pty.phc[[i]]	<- ph		#
	}
ph				<- pty.phc[[i]]
ph
thresh.brl=8e-6
dist.brl	<- hivc.clu.brdist.stats(ph, eval.dist.btw="leaf", stat.fun=hivc.clu.min.transmission.cascade)							#
	clustering	<- hivc.clu.clusterbythresh(ph, thresh.brl=thresh.brl, dist.brl=dist.brl, retval="all")			#
	#print(clustering)	#
	df			<- data.table(BAM=ph$tip.label, FILE_ID= gsub('_read.*','',ph$tip.label), COUNT= as.numeric(gsub('count_','',regmatches(ph$tip.label, regexpr('count_[0-9]+',ph$tip.label)))),  CLU_ID=clustering$clu.mem[seq_len(Ntip(ph))])#
	#df			<- merge(df, data.table(CLU_ID=seq_along(clustering$clu.idx), MRCA=clustering$clu.idx), by='CLU_ID', all.x=1)#
	df			<- subset(df,!is.na(CLU_ID))#
	phc			<- copy(ph)
df
tmp		<- subset(df[, list(CLU_N=length(unique(FILE_ID))), by='CLU_ID'], CLU_N==1)#
		df		<- merge(df, tmp, by='CLU_ID')			#
		df		<- merge(df, df[, list(BAMCLU= paste( FILE_ID[1],'_clu_',CLU_ID,'_count_',sum(COUNT), sep='' ) ), by='CLU_ID'], by='CLU_ID')
df
clu.id<- 1
Ntip(ph)
df			<- data.table(BAM=ph$tip.label, FILE_ID= gsub('_read.*','',ph$tip.label), COUNT= as.numeric(gsub('count_','',regmatches(ph$tip.label, regexpr('count_[0-9]+',ph$tip.label)))),  CLU_ID=clustering$clu.mem[seq_len(Ntip(ph))])#
	#df			<- merge(df, data.table(CLU_ID=seq_along(clustering$clu.idx), MRCA=clustering$clu.idx), by='CLU_ID', all.x=1)#
	df			<- subset(df,!is.na(CLU_ID))#
	phc			<- copy(ph)
tmp		<- subset(df[, list(CLU_N=length(unique(FILE_ID))), by='CLU_ID'], CLU_N==1)#
		df		<- merge(df, tmp, by='CLU_ID')			#
		df		<- merge(df, df[, list(TAXA_N=length(FILE_ID), BAMCLU= paste( FILE_ID[1],'_clu_',CLU_ID,'_count_',sum(COUNT), sep='' ) ), by='CLU_ID'], by='CLU_ID')
df
Ntip(phc)==nrow(df)
Ntip(phc)==nrow(df) && df[, length(unique(CLU_ID))]==1
subset(df, CLU_ID<0)
ptyfiles
col
setdiff(sort(unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))),'not characterized')
tmp2		<- setdiff(sort(unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))),'not characterized')#
		col			<- c('black',rainbow_hcl(length(tmp2)-1, start = 270, end = -30, c=100, l=50))#
		names(col)	<- c('not characterized',tmp2)
tmp2		<- setdiff(sort(unique(unlist(lapply(seq_along(phs), function(i)	levels(attr(phs[[i]],'INDIVIDUAL'))	)))),'not characterized')#
		col			<- c('black',rainbow_hcl(length(tmp2), start = 270, end = -30, c=100, l=50))#
		names(col)	<- c('not characterized',tmp2)
col
ptyfiles[1, gsub('\\.newick','\\collapsed.rda',gsub('_dophy','',gsub('_InWindow_[0-9]+_to_[0-9]+','',FILE)))]
file.path( outdir, ptyfiles[1, gsub('\\.newick','\\collapsed.rda',gsub('_dophy','',gsub('_InWindow_[0-9]+_to_[0-9]+','',FILE)))] )
ph
drop.tip(ph, ph$tip.label)
out.dir
HOME
out.dir			<- file.path(HOME,"coinf_ptoutput_150121")
infiles			<- data.table(FILE=list.files(out.dir, pattern='examl\\.rda$'))						#
		infiles[, PTY_RUN:= as.numeric(gsub('ptyr','',sapply(strsplit(FILE,'_'),'[[',1)))]#
		tmp				<- data.table(OUT=list.files(out.dir, pattern='examlcollapsed\\.rda$'))
tmp
tmp[,FILE:=gsub('collapsed','',OUT)]
tmp
infiles			<- merge(infiles, tmp, by='FILE',all.x=1)
infiles
pty.div
pty.stat.file	<- '~/Dropbox (Infectious Disease)/2015_PANGEA_DualPairsFromFastQIVA/coinf_ptoutput_150121/ptyr_examl_stat.rda'#
		load(pty.stat.file)
tmp	<- pty.stat[, list(FILE_ID_N=length(unique(W_FROM))), by='FILE_ID']#
		ggplot(tmp, aes(x=FILE_ID_N)) + geom_histogram()#
		#	within host diversity#
		tmp	<- pty.stat[, list(WHDA_p50=quantile(WHDA_p50,p=0.5), WHDA_p025=quantile(WHDA_p50,p=0.025), WHDA_p10=quantile(WHDA_p50,p=0.1), WHDA_p90=mean(WHDA_p50,p=0.9), WHDA_p95=quantile(WHDA_p50,p=0.95) ), by='W_FROM']	#
		ggplot(pty.stat, aes(x=W_FROM)) +  geom_point(aes(y=WHDA_p50, colour=WHDA_p50, size=COUNT_N), alpha=0.2 ) + #
				geom_ribbon(data=tmp, aes(ymin=WHDA_p10, ymax=WHDA_p90), fill='grey50', alpha=0.7) +#
				geom_ribbon(data=tmp, aes(ymin=WHDA_p90, ymax=WHDA_p95), fill='grey80', alpha=0.7) +#
				#geom_ribbon(data=tmp, aes(ymin=WHDA_p025, ymax=WHDA_p10), fill='grey80', alpha=0.5) +#
				scale_colour_continuous(guide=FALSE) + #
				scale_x_continuous(breaks=seq(0,10e3,500)) +#
				geom_line(data=tmp, aes(y=WHDA_p95), colour='red') +#
				geom_line(data=tmp, aes(y=WHDA_p90), colour='DarkRed') +#
				geom_line(data=tmp, aes(y=WHDA_p50)) + theme_bw() + theme(legend.position='bottom') +#
				labs(x='\ngenome position of window start in each run\n(bp)',y='mean within-host diversity\n(patristic distance, subst/site)\n', size='quality trimmed short reads per individual\n(#)')#
		ggsave(file=gsub('\\.rda','_whdivallreads\\.pdf',pty.stat.file), w=12, h=6)#
		#	get candidates by wh diversity	#
		#	not clear where to make cut.off. Just keep them all with decreasing priority, and plot for inspection.#
		pty.div	<- merge(subset(pty.stat, select=c(PTY_RUN, W_FROM, W_TO, FILE, FILE_ID, WHDA_p50, TAXA_N, COUNT_N)), subset(tmp, select=c(W_FROM, WHDA_p90, WHDA_p95)), by='W_FROM')#
		tmp		<- subset(pty.div, WHDA_p50>WHDA_p95 & TAXA_N>40)[, list(PTY_RUN=PTY_RUN[1], FILE_ID_N=length(W_FROM), WHDA_p50_avg=mean(WHDA_p50)), by='FILE_ID']#
		tmp		<- tmp[order(-FILE_ID_N),]	#
		write.csv(tmp, file=gsub('\\.rda','_whdivallreads_g90qu\\.csv',pty.stat.file), row.names=FALSE)
pty.lsep	<- subset(pty.stat, CL_COUNT_N>100)#
		pty.lsep[, THR_WHER:= 0.1]#
		set(pty.lsep, pty.lsep[,which(W_FROM>5200)],'THR_WHER',0.3)#
		tmp	<- pty.lsep[, list(CL_MX_LOCAL_SEP_p50=quantile(CL_MX_LOCAL_SEP,p=0.5), CL_MX_LOCAL_SEP_p025=quantile(CL_MX_LOCAL_SEP,p=0.025), CL_MX_LOCAL_SEP_p10=quantile(CL_MX_LOCAL_SEP,p=0.1), CL_MX_LOCAL_SEP_p90=mean(CL_MX_LOCAL_SEP,p=0.9), CL_MX_LOCAL_SEP_p95=quantile(CL_MX_LOCAL_SEP,p=0.95) ), by='W_FROM']	#
		ggplot(pty.lsep, aes(x=W_FROM)) +  geom_point(aes(y=CL_MX_LOCAL_SEP, colour=CL_MX_LOCAL_SEP, size=COUNT_N), alpha=0.2 ) + #
				geom_ribbon(data=tmp, aes(ymin=CL_MX_LOCAL_SEP_p10, ymax=CL_MX_LOCAL_SEP_p90), fill='grey50', alpha=0.7) +#
				geom_ribbon(data=tmp, aes(ymin=CL_MX_LOCAL_SEP_p90, ymax=CL_MX_LOCAL_SEP_p95), fill='grey80', alpha=0.7) +#
				#geom_ribbon(data=tmp, aes(ymin=WHDA_p025, ymax=WHDA_p10), fill='grey80', alpha=0.5) +#
				scale_colour_continuous(guide=FALSE) + #
				scale_x_continuous(breaks=seq(0,10e3,500)) +#
				geom_step(aes(y=THR_WHER), colour='red') +#
				geom_step(aes(y=THR_WHER/2), colour='DarkRed') +#
				#geom_line(data=tmp, aes(y=CL_MX_LOCAL_SEP_p95), colour='red') +#
				#geom_line(data=tmp, aes(y=CL_MX_LOCAL_SEP_p90), colour='DarkRed') +#
				geom_line(data=tmp, aes(y=CL_MX_LOCAL_SEP_p50)) + theme_bw() + theme(legend.position='bottom') +#
				labs(x='\ngenome position of window start in each run\n(bp)',y='stem length of clades with >100 reads\n(subst/site)\n', size='quality trimmed short reads per individual\n(#)')#
		ggsave(file=gsub('\\.rda','_whlsepallreads100\\.pdf',pty.stat.file), w=12, h=6)#
		#	get candidates#
		tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(PTY_RUN=PTY_RUN[1], FILE_ID_N=length(W_FROM), CL_MX_LOCAL_SEP_avg=mean(CL_MX_LOCAL_SEP)), by='FILE_ID']#
		tmp		<- tmp[order(-FILE_ID_N),]	#
		write.csv(tmp, file=gsub('\\.rda','_whlsepallreads100\\.csv',pty.stat.file), row.names=FALSE)
tmp
pty.lsep
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM)), by='FILE_ID']
tmp
pty.lsep
merge(tmp, subset(pty.lsep, select=c(PTY_RUN, W_FROM, W_TO, FILE, FILE_ID, DIFF_IND, CL_MX_LOCAL_SEP, CL_AVG_HEIGHT_UNIQUE, CL_AVG_HEIGHT_ALL, CL_TAXA_N, CL_COUNT_N,TAXA_N, COUNT_N)), by='FILE_ID')
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']
tmp		<- tmp[order(-FILE_ID_N),]
tmp
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']#
		tmp		<- subset(tmp, FILE_ID_N>2)#
		#merge(tmp, subset(pty.lsep, select=c(PTY_RUN, W_FROM, W_TO, FILE, FILE_ID, DIFF_IND, CL_MX_LOCAL_SEP, CL_AVG_HEIGHT_UNIQUE, CL_AVG_HEIGHT_ALL, CL_TAXA_N, CL_COUNT_N,TAXA_N, COUNT_N)), by='FILE_ID')#
		tmp		<- tmp[order(-FILE_ID_N),]
tmp
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']#
		tmp		<- subset(tmp, FILE_ID_N>2)		#
		tmp		<- tmp[order(-FILE_ID_N),]
tmp
merge(pty.lsep, tmp, by='FILE_ID')
merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')
tmp2	<- merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')
subset(tmp2, FILE_ID=='13557_1_86')
tmp2	<- merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')#
		tmp2	<- subset(tmp2, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)#
		subset(tmp2, FILE_ID=='13557_1_86')
subset(tmp2, FILE_ID=='13557_1_86', c(PTY_RUN, W_FROM, W_TO, FILE, FILE_ID, DIFF_IND, CL_MX_LOCAL_SEP, CL_AVG_HEIGHT_UNIQUE, CL_AVG_HEIGHT_ALL, CL_TAXA_N, CL_COUNT_N,TAXA_N, COUNT_N))
tmp2
tmp2[, length(unique(FILE_ID))]
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']#
		tmp		<- subset(tmp, FILE_ID_N>2 & DIFF_IND>0)		#
		tmp		<- tmp[order(-FILE_ID_N),]
tmp2	<- merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')#
		tmp2	<- subset(tmp2, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)
tmp2[, length(unique(FILE_ID))]
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)[, list(FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']#
		tmp		<- subset(tmp, FILE_ID_N>2 & DIFF_IND>0)		#
		tmp		<- tmp[order(-FILE_ID_N),]	#
		write.csv(tmp, file=gsub('\\.rda','_whlsepallreads100\\.csv',pty.stat.file), row.names=FALSE)#
		tmp2	<- merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')#
		tmp2	<- subset(tmp2, CL_MX_LOCAL_SEP>THR_WHER/2 & TAXA_N>40)
tmp2
indir
infiles		<- data.table(FILE=list.files(indir, pattern='examl.rda$'))#
		infiles[, PTY_RUN:= as.numeric(gsub('ptyr','',sapply(strsplit(FILE,'_'),'[[',1)))]
infiles
tmp2[i,]
tmp2[i,PTY_RUN]
subset(infiles, PTY_RUN==tmp2[i,PTY_RUN])
infiles[ PTY_RUN==tmp2[i,PTY_RUN],	FILE]
file	<- file.path(indir, infiles[ PTY_RUN==tmp2[i,PTY_RUN],	FILE])
z<-load(file)
z
names(pty.ph)
tmp2[i,]
pty.ph[[ tmp2[i,FILE]  ]]
ph		<- pty.ph[[ tmp2[i,FILE]  ]]
str(ph)
node.depth.edgelength(ph)[1:Ntip(ph)]
max.node.height	<- max(node.depth.edgelength(ph)[1:Ntip(ph)])
max.node.height
sort(levels(attr(ph,'INDIVIDUAL')))
setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),tmp2[i,FILE_ID])
tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))
tmp
tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))#
			col				<- c('black','grey50',rainbow_hcl(length(tmp2)-2, start = 270, end = -30, c=100, l=50))#
			names(col)		<- tmp
col
tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))#
			col				<- c('black','grey50',rainbow_hcl(length(tmp)-2, start = 270, end = -30, c=100, l=50))#
			names(col)		<- tmp
col
tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,' ',W_FROM,'-',W_TO, sep='')]
ph.title		<- tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,' ',W_FROM,'-',W_TO, sep='')]
p				<- ggtree(ph, aes(color=INDIVIDUAL, linetype=TYPE)) + #
					geom_nodepoint(size=ph$node.label/100*3) +#
					geom_tiplab(size=1.2,  hjust=-.1) +							 #
					scale_color_manual(values=col, guide = FALSE) +											 #
					scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
					theme_tree2() +#
					theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
					labs(x='subst/site', title=ph.title)#
			p
phps	<- lapply(seq_len(tmp2), function(i)#
				{#
					#i				<-1#
					file			<- file.path(indir, infiles[ PTY_RUN==tmp2[i,PTY_RUN],	FILE])#
					load(file)#
					ph				<- pty.ph[[ tmp2[i,FILE]  ]]#
					max.node.height	<- max(node.depth.edgelength(ph)[1:Ntip(ph)])#
					tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))#
					col				<- c('black','grey50',rainbow_hcl(length(tmp)-2, start = 270, end = -30, c=100, l=50))#
					names(col)		<- tmp			#
					ph.title		<- tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,', win=',W_FROM,'-',W_TO, sep='')]#
					p				<- ggtree(ph, aes(color=INDIVIDUAL, linetype=TYPE)) + #
							geom_nodepoint(size=ph$node.label/100*3) +#
							geom_tiplab(size=1.2,  hjust=-.1) +							 #
							scale_color_manual(values=col, guide = FALSE) +											 #
							scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
							theme_tree2() +#
							theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
							labs(x='subst/site', title=ph.title)#
					p#
				})
tmp2
phps	<- lapply(seq_len(nrow(tmp2)), function(i)#
				{#
					#i				<-1#
					file			<- file.path(indir, infiles[ PTY_RUN==tmp2[i,PTY_RUN],	FILE])#
					load(file)#
					ph				<- pty.ph[[ tmp2[i,FILE]  ]]#
					max.node.height	<- max(node.depth.edgelength(ph)[1:Ntip(ph)])#
					tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))#
					col				<- c('black','grey50',rainbow_hcl(length(tmp)-2, start = 270, end = -30, c=100, l=50))#
					names(col)		<- tmp			#
					ph.title		<- tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,', win=',W_FROM,'-',W_TO, sep='')]#
					p				<- ggtree(ph, aes(color=INDIVIDUAL, linetype=TYPE)) + #
							geom_nodepoint(size=ph$node.label/100*3) +#
							geom_tiplab(size=1.2,  hjust=-.1) +							 #
							scale_color_manual(values=col, guide = FALSE) +											 #
							scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
							theme_tree2() +#
							theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
							labs(x='subst/site', title=ph.title)#
					p#
				})
dir('/usr/filg.x')
dir('/usr/oliver/filg.x')
dir('/usr/oliver/filg.txt')
dirname('/usr/oliver/filg.txt')
tmp2
i<- 5
ph.title		<- tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,', win=',W_FROM,'-',W_TO,'\ndiffind', DIFF_IND,' diff',DIFF, ' lsep', round(CL_MX_LOCAL_SEP,d=3), sep='')]
ph.title
CODE.HOME	<<- "/work/or105/libs/phyloscan"
cmd			<- paste(file.path(CODE.HOME, "misc/phyloscan.startme.Rscript"), '-exe=VARIOUS', '\n', sep='')#
		cmd			<- cmd.hpcwrapper(cmd, hpc.nproc= 1, hpc.q='pqeelab', hpc.walltime=10, hpc.mem="5000mb")#
		cat(cmd)
require(big.phylo)#
		cmd			<- paste(file.path(CODE.HOME, "misc/phyloscan.startme.Rscript"), ' -exe=VARIOUS', '\n', sep='')#
		cmd			<- cmd.hpcwrapper(cmd, hpc.nproc= 1, hpc.q='pqeelab', hpc.walltime=10, hpc.mem="5000mb")#
		cat(cmd)
roxygen2::roxygenize("/Users/Oliver/git/phyloscan")
coi.args	<- list(cl_count_n=100, taxa_n=40, diff_ind=1, win_n=3)
coi.args
paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')
coi.args	<- list(clcountn=100, taxan=40, diffind=1, winn=3)#
	paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')
HOME
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(0)	#
	{#
		coi.args<- list(clcountn=100, taxan=40, diffind=1, winn=3)#
	}#
	#	weaker evidence for superinfections: no separating individuals#
	if(1)	#
	{#
		coi.args<- list(clcountn=100, taxan=40, diffind=1, winn=3)#
	}
tmp			<- paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),'superinfections',tmp,'.csv')#
	load(stat.infile)	#
	##
	#	long branches. focus on subtending clades with more than 100 reads#
	pty.lsep	<- subset(pty.stat, CL_COUNT_N>=coi.args[['clcountn']] & TAXA_N>=coi.args[['taxan']])#
	pty.lsep[, THR_WHER:= 0.1]#
	set(pty.lsep, pty.lsep[,which(W_FROM>5200)],'THR_WHER',0.3)
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2)[, list(PTY_RUN=PTY_RUN[1], FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']
coi.args[['diffind']]==0
coi.args
coi.args<- list(clcountn=100, taxan=40, diffind=0, winn=3)
tmp	<- subset(tmp, FILE_ID_N>=coi.args[['winn']] & DIFF_IND==0)
tmp		<- tmp[order(-FILE_ID_N),]
outfile
outfile		<- file.path(dirname(stat.infile),paste('superinfections',tmp,sep=''),'.csv')
outfile
tmp			<- paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('superinfections',tmp,sep=''),'.csv')
outfile
outfile		<- file.path(dirname(stat.infile),paste('superinfections_',tmp,'.csv',sep=''))
outfile
tmp		<- subset(pty.lsep, CL_MX_LOCAL_SEP>THR_WHER/2)[, list(PTY_RUN=PTY_RUN[1], FILE_ID_N=length(W_FROM), DIFF_IND= max(DIFF_IND)), by='FILE_ID']#
	if(coi.args[['diffind']]>0)#
		tmp	<- subset(tmp, FILE_ID_N>=coi.args[['winn']] & DIFF_IND>=coi.args[['diffind']])#
	if(coi.args[['diffind']]==0)#
		tmp	<- subset(tmp, FILE_ID_N>=coi.args[['winn']] & DIFF_IND==0)#
	tmp		<- tmp[order(-FILE_ID_N),]
tmp
write.csv(tmp, file=outfile, row.names=FALSE)#
	##
	#	plot windows of candidates#
	tmp2	<- merge(pty.lsep, subset(tmp, select=FILE_ID), by='FILE_ID')#
	tmp2	<- subset(tmp2, CL_MX_LOCAL_SEP>THR_WHER/2 )#
	infiles		<- data.table(FILE=list.files(tree.indir, pattern='examl.rda$'))#
	infiles[, PTY_RUN:= as.numeric(gsub('ptyr','',sapply(strsplit(FILE,'_'),'[[',1)))]		#
	phps	<- lapply(seq_len(nrow(tmp2)), function(i)#
			{#
				#i				<-1#
				cat('\nprepare plot',i,'/',nrow(tmp2))#
				file			<- file.path(tree.indir, infiles[ PTY_RUN==tmp2[i,PTY_RUN],	FILE])#
				load(file)#
				ph				<- pty.ph[[ tmp2[i,FILE]  ]]#
				max.node.height	<- max(node.depth.edgelength(ph)[1:Ntip(ph)])#
				tmp				<- c(c(tmp2[i,FILE_ID],'not characterized'), sort(setdiff(sort(levels(attr(ph,'INDIVIDUAL'))),c(tmp2[i,FILE_ID],'not characterized'))))#
				col				<- c('black','grey50',rainbow_hcl(length(tmp)-2, start = 270, end = -30, c=100, l=50))#
				names(col)		<- tmp			#
				ph.title		<- tmp2[i, paste( FILE_ID,'\nrun=',PTY_RUN,', win=',W_FROM,'-',W_TO,'\ndiffind', DIFF_IND,' diff',DIFF, ' lsep', round(CL_MX_LOCAL_SEP,d=3), sep='')]#
				p				<- ggtree(ph, aes(color=INDIVIDUAL, linetype=TYPE)) + #
						geom_nodepoint(size=ph$node.label/100*3) +#
						geom_tiplab(size=1.2,  hjust=-.1) +							 #
						scale_color_manual(values=col, guide = FALSE) +											 #
						scale_linetype_manual(values=c('target'='solid','filler'='dotted'),guide = FALSE) +#
						theme_tree2() +#
						theme(legend.position="bottom") + ggplot2::xlim(0, max.node.height*1.3) +#
						labs(x='subst/site', title=ph.title)#
				p#
			})	#
	tmp			<- seq_len(ceiling(length(phps)/10))
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(0)	#
	{#
		coi.args<- list(clcountn=100, taxan=40, diffind=1, winn=3)#
	}#
	#	weaker evidence for superinfections: no separating individuals#
	if(1)	#
	{#
		coi.args<- list(clcountn=100, taxan=40, diffind=0, winn=3)#
	}#
	tmp			<- paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('superinfections_',tmp,'.csv',sep=''))#
	load(stat.infile)
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(0)	#
	{#
		cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=3)#
	}#
	tmp			<- paste(sapply(seq_along(cnt.args),function(i) paste(names(cnt.args)[i],cnt.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('superinfections_',tmp,'.csv',sep=''))#
	load(stat.infile)
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(1)	#
	{#
		cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=3)#
	}#
	tmp			<- paste(sapply(seq_along(cnt.args),function(i) paste(names(cnt.args)[i],cnt.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('superinfections_',tmp,'.csv',sep=''))#
	load(stat.infile)
pty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	tmp			<- unique(pty.cm)[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]
tmp
tmp			<- subset(tmp, FILE_ID_N>=cnt.args[['winn']])
ttmp			<- subset(tmp, WIN_N>=cnt.args[['winn']])
tpty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	tmp			<- unique(pty.cm)[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]#
	tmp			<- subset(tmp, W_N>=cnt.args[['winn']])
tmp
pty.cm
cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=5)
tmp			<- paste(sapply(seq_along(cnt.args),function(i) paste(names(cnt.args)[i],cnt.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('superinfections_',tmp,'.csv',sep=''))#
	load(stat.infile)	#
	##
	#	select individuals with at least one other individual inbetween and many separate clades of the other individual#
	pty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	tmp			<- unique(pty.cm)[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]#
	tmp			<- subset(tmp, W_N>=cnt.args[['winn']])
tmp
subset(tmp, W_N>=10)
cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=10)
pty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	tmp			<- unique(pty.cm)[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]#
	tmp			<- subset(tmp, W_N>=cnt.args[['winn']])
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(1)	#
	{#
		cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=10)#
	}#
	tmp			<- paste(sapply(seq_along(cnt.args),function(i) paste(names(cnt.args)[i],cnt.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('contaminants_',tmp,'.csv',sep=''))#
	load(stat.infile)	#
	##
	#	select individuals with at least one other individual inbetween and many separate clades of the other individual#
	pty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	tmp			<- unique(pty.cm)[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]#
	tmp			<- subset(tmp, W_N>=cnt.args[['winn']])
outfile
tmp2	<- merge(pty.cm, subset(tmp, select=FILE_ID), by='FILE_ID')
tmp2
subset(tmp2, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])
pty.stat[, length(unique(DIFF)), by='FILE_ID']
pty.stat
tmp[,length(FILE_ID)]
stat.infile	<- file.path(HOME,'coinf_ptoutput_150121/ptyr_examl_stat.rda')#
	tree.indir	<- file.path(HOME,'coinf_ptoutput_150121')#
	#	should have strong evidence for superinfections: separating individuals#
	if(1)	#
	{#
		cnt.args<- list(countn=100, taxan=40, diffind=1, diff=10, winn=10)#
	}#
	tmp			<- paste(sapply(seq_along(cnt.args),function(i) paste(names(cnt.args)[i],cnt.args[i],sep='_')	),collapse='_')#
	outfile		<- file.path(dirname(stat.infile),paste('contaminants_',tmp,'.csv',sep=''))#
	load(stat.infile)	#
	##
	#	select individuals with at least one other individual inbetween and many separate clades of the other individual#
	pty.cm		<- subset(pty.stat, DIFF_IND>=cnt.args[['diffind']] & DIFF>cnt.args[['diff']])#
	setkey(pty.cm, PTY_RUN, W_FROM, W_TO, FILE_ID)#
	pty.cm		<- unique(pty.cm)#
	tmp			<- pty.cm[, list(W_N=length(W_FROM)), by='FILE_ID']#
	tmp			<- tmp[order(-W_N),]#
	tmp			<- subset(tmp, W_N>=cnt.args[['winn']])#
	write.csv(tmp, file=outfile, row.names=FALSE)#
	##
	#	plot trees for each window of candidates#
	tmp2	<- merge(pty.cm, subset(tmp, select=FILE_ID), by='FILE_ID')
tmp2
setkey(tmp2, PTY_RUN, W_FROM, W_TO, FILE_ID, COUNT_N)
tmp2
tmp2	<- merge(pty.cm, subset(tmp, select=FILE_ID), by='FILE_ID')#
	tmp2	<- tmp2[order(PTY_RUN, W_FROM, W_TO, FILE_ID, -COUNT_N),]
tmp2
tmp2	<- merge(pty.cm, subset(tmp, select=FILE_ID), by='FILE_ID')#
	tmp2	<- tmp2[order(FILE_ID,PTY_RUN, W_FROM, W_TO, -COUNT_N),]
tmp2
tmp2	<- merge(pty.cm, subset(tmp, select=FILE_ID), by='FILE_ID')#
	tmp2	<- tmp2[order(FILE_ID, -COUNT_N),]
tmp2
tmp2[, list(W_FROM=W_FROM[1:min(10,length(W_FROM))]), by='FILE_ID']
tmp2	<- merge(tmp2, tmp2[, list(W_FROM=W_FROM[1:min(10,length(W_FROM))]), by='FILE_ID'], by=c('FILE_ID','W_FROM'))
tmp2
coi.args<- list(clcountn=100, taxan=40, diffind=1, winn=3)
tmp			<- paste(sapply(seq_along(coi.args),function(i) paste(names(coi.args)[i],coi.args[i],sep='_')	),collapse='_')
tmp
pty.runs
pty.runs[, length(unique(TAXA))]
780/20
pty.runs[, table(PTY_RUN)]
tmp2
tmp2[, length(unique(W_FROM))]
pty.stat[, length(unique(W_FROM))]
as.data.table(read.csv("~/Dropbox (Infectious Disease)/2015_PANGEA_DualPairsFromFastQIVA/coinf_ptoutput_150121/superinfections_clcountn_100_taxan_40_diffind_1_winn_3.csv"))
as.data.table(read.csv("~/Dropbox (Infectious Disease)/2015_PANGEA_DualPairsFromFastQIVA/coinf_ptoutput_150121/superinfections_clcountn_100_taxan_40_diffind_1_winn_3_curated.csv"))
df<-as.data.table(read.csv("~/Dropbox (Infectious Disease)/2015_PANGEA_DualPairsFromFastQIVA/coinf_ptoutput_150121/superinfections_clcountn_100_taxan_40_diffind_1_winn_3_curated.csv"))
colnames(df)
df[, table(grepl('^Super',THOUGHTS_OR))]
(8.5+3.5 )/ 2
